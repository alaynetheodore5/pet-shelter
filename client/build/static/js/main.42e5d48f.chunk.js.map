{"version":3,"sources":["components/Display.jsx","components/PetForm.jsx","components/ViewPet.jsx","components/EditPet.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","catch","err","className","to","scope","map","p","i","key","_id","name","type","PetForm","setName","setType","description","setDescription","skill_one","setSkillOne","skill_two","setSkillTwo","skill_three","setSkillThree","errors","setErrors","onSubmit","e","preventDefault","petItem","post","navigate","onChange","target","value","properties","message","ViewPet","onClick","delete","EditPet","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.42e5d48f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from '@reach/router';\n\nconst Display = props => {\n    \n    const [pets, setPets] = useState([]);\n\n    const fetchPets = () => {\n        axios.get(\"http://localhost:8000/api/pets\")\n            .then(res => {\n                console.log(res);\n                setPets(res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    useEffect( () => {\n        fetchPets();\n    }, []);\n\n    return (\n        <div>\n            <h5 className=\"text-warning text-center\">These pets are looking for a good home!</h5>\n            <Link className=\"btn btn-warning float-right btn-lg mb-2\" to=\"/new\">add a pet to the shelter!</Link>\n            <table className=\"table col-sm-6 offset-sm-2\">\n                <thead className=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Type</th>\n                    <th className=\"text-center\"scope=\"col\">Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n            {pets.map( (p, i) => \n                <tr key={p._id}>\n                    <td>{p.name}</td>\n                    <td>{p.type}</td>\n                    <td>\n                        <Link className=\"btn btn-outline-info ml-5\" to={`/view/${p._id}`} >VIEW</Link>\n                        <Link className=\"btn btn-outline-warning ml-1\" to={`/edit/${p._id}`} >EDIT</Link>\n                    </td>\n                </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Display;","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst PetForm = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill_one, setSkillOne] = useState(\"\");\n    const [skill_two, setSkillTwo] = useState(\"\");\n    const [skill_three, setSkillThree] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    const CreatePet = e => {\n        e.preventDefault();\n        const petItem = {name, type, description, skill_one, skill_two, skill_three};\n        axios.post(\"http://localhost:8000/api/pets\", petItem)\n            .then(res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"row\">\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={CreatePet}>\n            <h5 className=\"text-warning text-center\">Know a pet needing a home?</h5>\n                <div className=\"\">\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} />\n                        {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Type</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setType(e.target.value)} />\n                        {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setDescription(e.target.value)} />\n                        {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\" }\n                    </div>\n                </div>\n                <div className=\"\">\n                    <p className=\"text-center\">Skills (optional):</p>\n                    <div className=\"form-group\">\n                        <label>Skill 1</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkillOne(e.target.value)} />\n                        {errors.skill_one ? <p className=\"text-danger\">{errors.skill_one.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Skill 2</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkillTwo(e.target.value)} />\n                        {errors.skill_two ? <p className=\"text-danger\">{errors.skill_two.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Skill 3</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkillThree(e.target.value)} />\n                        {errors.skill_three ? <p className=\"text-danger\">{errors.skill_three.properties.message}</p>: \"\" }\n                    </div>\n                </div>\n                <input type=\"submit\" className=\"btn btn-warning btn-block\" value=\"Add Pet!\" />\n            </form>\n        </div>\n    )\n}\n\nexport default PetForm;","import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst ViewPet = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill_one, setSkillOne] = useState(\"\");\n    const [skill_two, setSkillTwo] = useState(\"\");\n    const [skill_three, setSkillThree] = useState(\"\");\n\n    useEffect( () => {\n        // console.log(props._id);\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then( res => {\n                console.log(res);\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkillOne(res.data.skill_one);\n                setSkillTwo(res.data.skill_two);\n                setSkillThree(res.data.skill_three);\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n    \n    const remove = () => {\n        axios.delete(`http://localhost:8000/api/pets/${props._id}`)\n        .then(res => {\n            console.log(res);\n            navigate(\"/\");\n        })\n        .catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"row\">\n            <h5 className=\"col-sm-8 offset-sm-2 text-warning text-center\">Details about {name}</h5>\n            <div className=\"card col-sm-8 offset-sm-2\">\n                <div className=\"card-header bg-dark text-light\"><h5>{name}</h5></div>\n                <div className=\"card-body\">\n                    <p>Type: {type}</p>\n                    <p>Description: {description}</p>\n                    <p>Skills: {skill_one} {skill_two} {skill_three}\n                    </p>\n                    <button className=\"btn btn-success float-right\" onClick={remove} >Adopt {name}</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ViewPet;","import React, { useState, useEffect } from 'react';\nimport { navigate } from '@reach/router';\nimport axios from 'axios';\n\nconst EditPet = props => {\n    const [name, setName] = useState(\"\");\n    const [type, setType] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [skill_one, setSkillOne] = useState(\"\");\n    const [skill_two, setSkillTwo] = useState(\"\");\n    const [skill_three, setSkillThree] = useState(\"\");\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        // console.log(props._id);\n        axios.get(`http://localhost:8000/api/pets/${props._id}`)\n            .then( res => {\n                console.log(res);\n                setName(res.data.name);\n                setType(res.data.type);\n                setDescription(res.data.description);\n                setSkillOne(res.data.skill_one);\n                setSkillTwo(res.data.skill_two);\n                setSkillThree(res.data.skill_three);\n            }).catch(errors => console.log(errors));\n    }, [props._id]);\n\n    const UpdatePet = e => {\n        e.preventDefault();\n        const petItem = {name, type, description, skill_one, skill_two, skill_three};\n        axios.put(`http://localhost:8000/api/pets/${props._id}`, petItem)\n            .then( res => {\n                console.log(res);\n                if(res.data.errors) {\n                    setErrors(res.data.errors);\n                } else {\n                    navigate(\"/\");\n                }\n            }).catch(err => console.log(err));\n    }\n\n    return (\n        <div className=\"row\">\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdatePet}>\n                <h5 className=\"text-warning text-center\">Edit {name}</h5>\n                <div className=\"\">\n                    <div className=\"form-group\">\n                        <label>Name</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setName(e.target.value)} value={name} />\n                        {errors.name ? <p className=\"text-danger\">{errors.name.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Type</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setType(e.target.value)} value={type} />\n                        {errors.type ? <p className=\"text-danger\">{errors.type.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Description</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setDescription(e.target.value)} value={description} />\n                        {errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p>: \"\" }\n                    </div>\n                </div>\n                <div className=\"\">\n                    <p className=\"text-center\">Skills (optional):</p>\n                    <div className=\"form-group\">\n                        <label>Skill 1</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkillOne(e.target.value)} value={skill_one}/>\n                        {errors.skill_one ? <p className=\"text-danger\">{errors.skill_one.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Skill 2</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkillTwo(e.target.value)} value={skill_two} />\n                        {errors.skill_two ? <p className=\"text-danger\">{errors.skill_two.properties.message}</p>: \"\" }\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Skill 3</label>\n                        <input type=\"text\" className=\"form-control\" onChange={e => setSkillThree(e.target.value)} value={skill_three} />\n                        {errors.skill_three ? <p className=\"text-danger\">{errors.skill_three.properties.message}</p>: \"\" }\n                    </div>\n                </div>\n                <input type=\"submit\" className=\"btn btn-warning btn-block\" value=\"Edit Pet\" />\n            </form>\n        </div>    \n    )\n}\n\nexport default EditPet;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Router } from '@reach/router';\nimport Display from './components/Display';\nimport PetForm from './components/PetForm';\nimport ViewPet from './components/ViewPet';\nimport EditPet from './components/EditPet';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"jumbotron bg-info text-light text-center\">\n        <h1>Pet Shelter</h1>\n      </div>\n      <Link className=\"btn btn-outline-info float-right\" to=\"/\">Home</Link>\n      <Router className=\"my-5\">\n        <Display path=\"/\" />\n        <PetForm path=\"/new\" />\n        <ViewPet path=\"/view/:_id\" />\n        <EditPet path=\"/edit/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}